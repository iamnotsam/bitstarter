//
// Section Variables
//
<<<<<<< HEAD
$include-html-section-classes: $include-html-classes !default;

// We use these to set padding and hover factor
$section-title-padding: emCalc(15) !default;
$section-content-padding: emCalc(15) !default;
$section-function-factor: 10% !default;

// These style the titles
$section-title-color: #333 !default;
$section-title-bg: #efefef !default;
$section-title-bg-active: darken($section-title-bg, $section-function-factor) !default;
$section-title-bg-active-tabs: #fff !default;
$section-title-bg-hover: darken($section-title-bg, $section-function-factor/2) !default;

// Want to control border size, here ya go!
$section-border-size: 1px !default;
$section-border-style: solid !default;
$section-border-color: #ccc !default;

// Font controls
$section-font-size: emCalc(14) !default;

// Control the color of the background and some size options
$section-content-bg: #fff !default;
$section-vertical-nav-min-width: emCalc(200) !default;
$section-vertical-tabs-title-width: emCalc(200) !default;
$section-bottom-margin: emCalc(20) !default;

$title-selector: ".title" !default;
$content-selector: ".content" !default;
=======

// We use these to set padding and hover factor
$section-padding:                emCalc(15px) !default;
$section-function-factor:        10% !default;

// These style the titles
$section-title-color:            #333 !default;
$section-title-bg:               #efefef !default;
$section-title-bg-active:        darken($section-title-bg, $section-function-factor) !default;
$section-title-bg-active-tabs:   #fff !default;

// Want to control border size, here ya go!
$section-border-size:            1px !default;
$section-border-style:           solid !default;
$section-border-color:           #ccc !default;

// Control the color of the background and some size options
$section-content-bg:                #fff !default;
$section-vertical-nav-min-width:    emCalc(200px) !default;
$section-vertical-tabs-title-width: emCalc(200px) !default;
$section-bottom-margin:             emCalc(20px) !default;
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2


//
// Section Mixins
//

// We use this mixin to create the basic container styles for sections when they act like accordions
@mixin section-container($base-style:true, $section-type:accordion) {

<<<<<<< HEAD
  /// We can set this to false to not include these styles to avoid repeated CSS on classes.
=======
  // We can set this to false to not include these styles to avoid repeated CSS on classes.
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
  @if $base-style {
    width: 100%;
    display: block;
    margin-bottom: $section-bottom-margin;
  }

  // Accordion container border styles
  @if $section-type == accordion {
    border: $section-border-size $section-border-style $section-border-color;
    border-top: none;
  }

  // Tabs container border styles
  @else if $section-type == tabs {
    border: 0;
    position: relative;
  }

  // Vertical Tabs container border styles
  @else if $section-type == vertical-tabs {
    border: $section-border-size $section-border-style $section-border-color;
    position: relative;
  }

  // Vertical Nav container border styles
  @else if $section-type == vertical-nav {
<<<<<<< HEAD
    border: 0;
    position: relative;
=======

>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
  }

  // Horizontal Nav container border styles
  @else if $section-type == horizontal-nav {
    position: relative;
    background: $section-title-bg;
    border: $section-border-size $section-border-style $section-border-color;
  }
<<<<<<< HEAD

}


@mixin section($section-type:accordion, $title-selector:".title", $content-selector:".content", $title-padding:$section-title-padding, $title-color:$section-title-color, $title-font-size:$section-font-size, $title-bg:$section-title-bg, $title-bg-hover:$section-title-bg-hover, $title-bg-active:$section-title-bg-active, $title-color-active:$section-title-color, $content-bg:$section-content-bg, $content-padding:$section-content-padding, $section-border-size:$section-border-size, $section-border-style:$section-border-style, $section-border-color: $section-border-color) {

  // Default Styles
  > #{$title-selector} {
    background-color: $title-bg;
    cursor: $cursor-pointer-value;
    margin-bottom: 0;

    a {
      padding: $title-padding;
      display: inline-block;
      color: $title-color;
      font-size: $title-font-size;
      white-space: nowrap;
    }
    &:hover { background-color: $title-bg-hover; }
  }

  #{$content-selector} {
    display: none;
    padding: $content-padding;
    background-color: $content-bg;

    &>*:last-child { margin-bottom: 0; }
    &>*:first-child { padding-top: 0; }
    &>*:last-child:not(.flex-video) { padding-bottom: 0; }
  }

  &.active {
    & > #{$content-selector} { display: block; }
    & > #{$title-selector} { background: $title-bg-active;
      a { color: $title-color-active; }
    }
  }

  // Style for when Accordion
  @if $section-type == accordion {
    // border-top: $section-border-size $section-border-style $section-border-color;
    position: relative;

    > #{$title-selector} {
      top: 0;
      width: 100%;
      margin: 0;
      border-top: $section-border-style $section-border-size $section-border-color;

      a { width: 100%; }
    }
  }

  // Styles for when tabs
  @else if $section-type == tabs {
    border: 0;
    position: static;

    > #{$title-selector} {
      width: auto;
      border: $section-border-style $section-border-size $section-border-color;
      border-#{$opposite-direction}: 0;
      border-bottom: 0;
      position: absolute;
      top: 0;
=======
}

// We use this mixin to create the styles for sections as accordions.
@mixin section($section-type:accordion) {

  // Accordion styles
  @if $section-type == accordion {

    border-top: $section-border-size $section-border-style $section-border-color;
    position: relative;

    .title {
      top: 0;
      cursor: pointer;
      width: 100%;
      margin: 0;
      background-color: $section-title-bg;

      a {
        padding: $section-padding;
        display: inline-block;
        color: $section-title-color;
        font-size: emCalc(14px);
        white-space: nowrap;
        width: 100%;
      }
      &:hover { background-color: darken($section-title-bg, $section-function-factor/2); }
    }

    .content {
      display: none;
      padding: $section-padding;
      background-color: $section-content-bg;

      &>*:last-child { margin-bottom: 0; }
      &>*:first-child { padding-top: 0; }
      &>*:last-child { padding-bottom: 0; }
    }


    &.active {
      .content { display: block; }
      .title { background: $section-title-bg-active; }
    }


  }

  // Tab Styles
  @else if $section-type == tabs {
    padding-top: 0;
    border: 0;
    position: static;

    .title {
      width: auto;
      border: $section-border-size $section-border-style $section-border-color;
      border-#{$opposite-direction}: 0;
      border-bottom: 0;
      position: absolute;
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
      z-index: 1;

      a { width: 100%; }
    }
<<<<<<< HEAD
    &:last-child #{$title-selector} { border-#{$opposite-direction}: $section-border-style $section-border-size $section-border-color; }

    #{$content-selector} {
      border: $section-border-style $section-border-size $section-border-color;
      position: absolute;
      z-index: 10;
      display: none;
=======
    &:last-child .title { border-#{$opposite-direction}: $section-border-size $section-border-style $section-border-color; }

    .content {
      border: $section-border-size $section-border-style $section-border-color;
      position: absolute;
      z-index: 10;
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
      top: -1px;
    }

    &.active {
<<<<<<< HEAD
      & > #{$title-selector} {
        z-index: 11;
        border-bottom: 0;
        background-color: $title-bg-active;
      }
      & > #{$content-selector} { position: relative; }
    }
  }

  // Styles for when Vertical Tabs
=======

      .title {
        background-color: $section-title-bg-active-tabs;
        z-index: 11;
        border-bottom: 0;
      }
      .content { position: relative; }
    }
  }

>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
  @else if $section-type == vertical-tabs {
    padding-top: 0 !important;
    border: 0;
    position: static;
<<<<<<< HEAD

    > #{$title-selector} {
      position: absolute;
      border-top: $section-border-style $section-border-size $section-border-color;
      width: $section-vertical-tabs-title-width;
    }
    &:first-child #{$title-selector} { border-top: 0; }

    #{$content-selector} {
      // Display all content blocks to account for the scrollbar
      // in the outerWidth measurements. JavaScript will toggle the active tabs.
      display: block;
      position: relative;
      left: $section-vertical-tabs-title-width;
      border-left: $section-border-style $section-border-size $section-border-color;
=======
    background-color: $section-title-bg;

    .title {
      position: absolute;
      border-top: $section-border-size $section-border-style $section-border-color;
      width: $section-vertical-tabs-title-width;
    }

    &:first-child .title { border-top: 0; }

    .content {
      // Display all content blocks to account for the scrollbar
      // in the outerWidth measurements. JavaScript will toggle the active tabs.
      display: block;

      position: relative;
      left: $section-vertical-tabs-title-width;
      border-left: $section-border-size $section-border-style $section-border-color;
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
      z-index: 10;
    }

    &.active {
<<<<<<< HEAD
      & > #{$title-selector} {
        background-color: $title-bg-active;
        width: $section-vertical-tabs-title-width + emCalc(1); // Cover the content's left border
        border-right: solid 0 transparent;
        z-index: 11; // Put active title on top of the content
      }
      &:last-child #{$title-selector} { border-bottom: 0; }
    }
  }

  // Styles for when Vertical Nav
  @else if $section-type == vertical-nav {
    padding-top: 0 !important;
    position: relative;

    > #{$title-selector} {
      border-top: none;
      border: $section-border-style $section-border-size $section-border-color;

      a {
        display: block;
        width: 100%;
      }
    }
    #{$content-selector} { display: none; }
    &:first-child #{$title-selector} { border-bottom: none; }

    &.active {
      & > #{$content-selector} {
        display: block;
        position: absolute;
        #{$default-float}: 100%;
        top: 0px;
        z-index: 999;
        min-width: $section-vertical-nav-min-width;
        border: $section-border-style $section-border-size $section-border-color;
=======

      .title {
        background-color: $section-title-bg-active-tabs;
        width: $section-vertical-tabs-title-width + emCalc(2px); // Cover the content's left border
        border-right: 0;
        z-index: 11; // Put active title on top of the content
      }

      &:last-child .title {
        border-bottom: $section-border-size $section-border-style $section-border-color;
      }
    }
  }

  // Vertical Nav Styles
  @else if $section-type == vertical-nav {

    padding-top: 0 !important;

    .title a { display: block; width: 100%; }

    .content { display: none; }

    &.active {
      .content {
        display: block;
        position: absolute;
        #{$default-float}: 100%;
        top: -1px;
        z-index: 999;
        min-width: $section-vertical-nav-min-width;
        border: $section-border-size $section-border-style $section-border-color;
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
      }
    }
  }

<<<<<<< HEAD
  // Styles for when Horizontal Nav
=======
  // Horizontal Nav Styles
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
  @else if $section-type == horizontal-nav {
    padding-top: 0;
    border: 0;
    position: static;

<<<<<<< HEAD
    > #{$title-selector} {
      width: auto;
      border: $section-border-style $section-border-size $section-border-color;
=======
    .title {
      width: auto;
      border: $section-border-size $section-border-style $section-border-color;
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
      border-#{$default-float}: 0;
      top: -1px;
      position: absolute;
      z-index: 1;

      a { width: 100%; }
    }

<<<<<<< HEAD
    #{$content-selector} { display: none; }

    &.active {
      & > #{$content-selector} {
=======
    .content { display: none; }

    &.active {
      .content {
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
        display: block;
        position: absolute;
        z-index: 999;
        #{$default-float}: 0;
        top: -2px;
        min-width: $section-vertical-nav-min-width;
<<<<<<< HEAD
        border: $section-border-style $section-border-size $section-border-color;
      }
    }
  }

}



=======
        border: $section-border-size $section-border-style $section-border-color;
      }
    }
  }
}


>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
@if $include-html-section-classes != false {

  /* Sections */
  .section-container, .section-container.auto {
<<<<<<< HEAD
    @include section-container(accordion);

    &>section,
    &>.section { @include section(accordion); }
=======
    @include section-container;

    &>section,
    &>.section {
      @include section;
    }
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
  }

  .section-container.tabs {
    @include section-container(false, tabs);

    &>section,
<<<<<<< HEAD
    &>.section { @include section(tabs, $title-bg-active:$section-title-bg-active-tabs); }
=======
    &>.section { @include section(tabs); }
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
  }

  @media #{$small} {

    .section-container.auto {
      @include section-container(false, tabs);

      &>section,
<<<<<<< HEAD
      &>.section { @include section(tabs, $title-bg-active:$section-title-bg-active-tabs); }
=======
      &>.section { @include section(tabs); }
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
    }
    .section-container.accordion .section {
      padding-top: 0 !important;
    }

    .section-container.vertical-tabs {
      @include section-container(false, vertical-tabs);

      section,
      .section { @include section(vertical-tabs); }
    }

    .section-container.vertical-nav {
<<<<<<< HEAD
      @include section-container(false, vertical-nav);
=======
      @include section-container(false);
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2

      &>section,
      &>.section { @include section(vertical-nav); }
    }

    .section-container.horizontal-nav {
      @include section-container(false, horizontal-nav);

      &>section,
      &>.section { @include section(horizontal-nav); }
    }
  }

<<<<<<< HEAD
  // Change all variations to expanded accordions when no JS is detected.
  .no-js .section-container {
    &.auto,
    &.accordion,
    &.tabs,
    &.vertical-tabs,
    &.vertical-nav,
    &.horizontal-nav {
      @include section-container(accordion);

      &>section,
      &>.section { @include section(accordion);
        #{$title-selector} {
          position: static;
          width: 100%;
          border-left: 0;
          border-right: 0;
        }

        #{$content-selector} {
          position: static;
          display: block;
          width: 100%;
          border-left: 0;
          border-right: 0;
          border-bottom: 0;
        }
      }

    }
  }

=======
>>>>>>> 310c315ba7b2f49a26f4157f11c5ed489ae622a2
}
